{"version":3,"sources":["../../src/pages/accounts/accountlist-master.module.ts","../../src/pages/accounts/accountlist-master.ts","../../src/models/pipes/accountspipe.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { AccountListMasterPage } from './accountlist-master';\nimport {AccountsPipe} from '../../models/pipes/accountspipe';\n\n\n@NgModule({\n  declarations: [\n    AccountListMasterPage,\n    AccountsPipe\n  ],\n  imports: [\n    IonicPageModule.forChild(AccountListMasterPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    AccountListMasterPage\n  ]\n})\nexport class AccountListMasterPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/accounts/accountlist-master.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, ModalController, NavController, ToastController, Events } from 'ionic-angular';\n\nimport { Account } from '../../models/account';\nimport { Accounts } from '../../providers/providers';\n\nimport {LoginPage} from '../pages';\n\n@IonicPage()\n@Component({\n  selector: 'page-accountlist-master',\n  templateUrl: 'accountlist-master.html',\n})\nexport class AccountListMasterPage {\n  currentAccounts: Map<string, Account>;\n  currentBalances: Map<string, string>;\n\n  accountsReady = false;\n\n  constructor(public navCtrl: NavController, public accounts: Accounts, public modalCtrl: ModalController, public toastCtrl: ToastController, public events: Events) {\n    events.subscribe('user:notoken', () => {\n        // user and time are the same arguments passed in `events.publish(user, time)`\n        let toast = this.toastCtrl.create({\n            message: \"You are required to login befor access to this page\",\n            duration: 3000,\n            position: 'top'\n          });\n          toast.present();\n        this.navCtrl.push(LoginPage);\n    });\n  }\n\n  /**\n   * The view loaded, let's query our items for the list\n   */\n  ionViewDidLoad() {\n  }\n\n  /**\n   * Prompt the user to add a new item. This shows our ItemCreatePage in a\n   * modal and then adds the new item to our data source if the user created one.\n   */\n  addAccount() {\n    let addModal = this.modalCtrl.create('AccountCreatePage');\n    addModal.onDidDismiss(account => {\n      if (account) {\n        this.events.publish(\"loading:show\", 'Saving account information...');\n        this.accountsReady = false;\n        this.accounts.saveOne(account)\n        .then((account: Account) => {\n            //this.currentAccounts = this.accounts.accounts;\n            this.accountsReady = true;\n            this.events.publish(\"loading:hide\");\n        })\n        .catch((resp) => {\n          //this.navCtrl.push(LoginPage);\n          // Unable to get in\n          this.accountsReady = false;\n          this.events.publish(\"loading:hide\");\n          let toast = this.toastCtrl.create({\n            message: \"Unable to save account details: \" + resp.message,\n            duration: 3000,\n            position: 'top'\n          });\n          toast.present();\n        });\n      }\n    })\n    addModal.present();\n  }\n\n  /**\n   * Delete an item from the list of items.\n   */\n  deleteAccount(account) {\n      this.accounts.delete(account);\n  }\n\n  /**\n   * Navigate to the detail page for this item.\n   */\n  openAccount(account: Account) {\n    this.navCtrl.push('AccountDetailPage', {\n      account: account,\n      accountBalance: this.currentBalances.get(account[\"_id\"])\n    });\n  }\n\n  ionViewWillEnter() {\n        this.accountsReady = false;\n        this.events.publish(\"loading:show\", 'Loading account list...');\n        this.accounts.query()\n        .then((accounts:Map<string, Account>) => {\n            console.log(\"RECEIVED CURRENT ACCOUNTS\");\n            this.currentAccounts = accounts;\n            console.log(this.currentAccounts.size);\n            this.events.publish(\"loading:hide\");\n            this.events.publish(\"loading:show\", 'Loading account balances...');\n            return this.accounts.queryBalances();\n\n        })\n        .then((accountBalances:Map<string,string>) => {\n            console.log(\"RECEIVED ACCOUNT BALANCES\");\n            this.currentBalances = accountBalances;\n            console.log(this.currentBalances.size);\n            this.events.publish(\"loading:hide\");\n            this.accountsReady = true;\n        })\n        .catch((err) => {\n          //this.navCtrl.push(LoginPage);\n          // Unable to get in\n          console.log(JSON.stringify(err));\n          this.accountsReady = false;\n          this.events.publish(\"loading:hide\");\n          let toast = this.toastCtrl.create({\n            message: \"Unable to retrieve account details: \" + err.message,\n            duration: 3000,\n            position: 'top'\n          });\n          toast.present();\n        });\n    }\n    \n   keys() : Array<string> {\n      return Array.from(this.currentAccounts.keys());\n  }\n    \n    isPositive(identifier) {\n        let val:string = \"\"+this.currentBalances.get(this.currentAccounts.get(identifier)[\"_id\"]);\n        return !val.startsWith(\"-\");\n    }\n    \n    getBalance(identifier) {\n            return this.currentBalances.get(this.currentAccounts.get(identifier)[\"_id\"]);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/accounts/accountlist-master.ts","import {PipeTransform, Pipe} from '@angular/core';\nimport {Account} from '../account';\n\n@Pipe({name: 'accountlist'})\nexport class AccountsPipe implements PipeTransform {\ntransform(value:Map<string, Account>, args:string[] = null) : any {\n        return Object.keys(value).map(key => value[key]);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/pipes/accountspipe.ts"],"sourceRoot":""}
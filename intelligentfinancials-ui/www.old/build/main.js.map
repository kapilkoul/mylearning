{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/mocks/providers/items.ts","../../src/pages/pages.ts","../../src/models/account.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/providers/providers.ts","../../src/models/item.ts","../../src/providers/user/user.ts","../../src/providers/interceptor/authinterceptor.ts","../../src/providers/interceptor/notauthinterceptor.ts","../../src/providers/accounts/accounts.ts","../../src/models/transaction.ts","../../src/app/app.component.ts","../../src/providers/api/api.ts","../../src/providers/settings/settings.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;AClF2C;AAEF;AAGzC;IAUE;QATA,UAAK,GAAW,EAAE,CAAC;QAEnB,gBAAW,GAAQ;YACjB,MAAM,EAAE,WAAW;YACnB,YAAY,EAAE,8BAA8B;YAC5C,OAAO,EAAE,iBAAiB;SAC3B,CAAC;QAIA,IAAI,KAAK,GAAG;YACV;gBACE,MAAM,EAAE,WAAW;gBACnB,YAAY,EAAE,8BAA8B;gBAC5C,OAAO,EAAE,iBAAiB;aAC3B;YACD;gBACE,MAAM,EAAE,iBAAiB;gBACzB,YAAY,EAAE,iCAAiC;gBAC/C,OAAO,EAAE,uBAAuB;aACjC;YACD;gBACE,MAAM,EAAE,aAAa;gBACrB,YAAY,EAAE,8BAA8B;gBAC5C,OAAO,EAAE,mBAAmB;aAC7B;YACD;gBACE,MAAM,EAAE,WAAW;gBACnB,YAAY,EAAE,+BAA+B;gBAC7C,OAAO,EAAE,kBAAkB;aAC5B;YACD;gBACE,MAAM,EAAE,gBAAgB;gBACxB,YAAY,EAAE,kCAAkC;gBAChD,OAAO,EAAE,uBAAuB;aACjC;YACD;gBACE,MAAM,EAAE,aAAa;gBACrB,YAAY,EAAE,+BAA+B;gBAC7C,OAAO,EAAE,mBAAmB;aAC7B;YACD;gBACE,MAAM,EAAE,YAA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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 134;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 134\n// module chunks = 17","var map = {\n\t\"../pages/account-create/account-create.module\": [\n\t\t341,\n\t\t16\n\t],\n\t\"../pages/account-detail/account-detail.module\": [\n\t\t342,\n\t\t0\n\t],\n\t\"../pages/accounts/accountlist-master.module\": [\n\t\t343,\n\t\t1\n\t],\n\t\"../pages/cards/cards.module\": [\n\t\t344,\n\t\t15\n\t],\n\t\"../pages/content/content.module\": [\n\t\t345,\n\t\t14\n\t],\n\t\"../pages/item-create/item-create.module\": [\n\t\t346,\n\t\t13\n\t],\n\t\"../pages/item-detail/item-detail.module\": [\n\t\t347,\n\t\t12\n\t],\n\t\"../pages/list-master/list-master.module\": [\n\t\t348,\n\t\t11\n\t],\n\t\"../pages/login/login.module\": [\n\t\t350,\n\t\t10\n\t],\n\t\"../pages/menu/menu.module\": [\n\t\t349,\n\t\t9\n\t],\n\t\"../pages/search/search.module\": [\n\t\t351,\n\t\t8\n\t],\n\t\"../pages/settings/settings.module\": [\n\t\t352,\n\t\t7\n\t],\n\t\"../pages/signup/signup.module\": [\n\t\t353,\n\t\t6\n\t],\n\t\"../pages/tabs/tabs.module\": [\n\t\t354,\n\t\t5\n\t],\n\t\"../pages/transaction-create/transaction-create.module\": [\n\t\t355,\n\t\t4\n\t],\n\t\"../pages/tutorial/tutorial.module\": [\n\t\t356,\n\t\t3\n\t],\n\t\"../pages/welcome/welcome.module\": [\n\t\t357,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 185;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 185\n// module chunks = 17","import { Injectable } from '@angular/core';\n\nimport { Item } from '../../models/item';\n\n@Injectable()\nexport class Items {\n  items: Item[] = [];\n\n  defaultItem: any = {\n    \"name\": \"Burt Bear\",\n    \"profilePic\": \"assets/img/speakers/bear.jpg\",\n    \"about\": \"Burt is a Bear.\",\n  };\n\n\n  constructor() {\n    let items = [\n      {\n        \"name\": \"Burt Bear\",\n        \"profilePic\": \"assets/img/speakers/bear.jpg\",\n        \"about\": \"Burt is a Bear.\"\n      },\n      {\n        \"name\": \"Charlie Cheetah\",\n        \"profilePic\": \"assets/img/speakers/cheetah.jpg\",\n        \"about\": \"Charlie is a Cheetah.\"\n      },\n      {\n        \"name\": \"Donald Duck\",\n        \"profilePic\": \"assets/img/speakers/duck.jpg\",\n        \"about\": \"Donald is a Duck.\"\n      },\n      {\n        \"name\": \"Eva Eagle\",\n        \"profilePic\": \"assets/img/speakers/eagle.jpg\",\n        \"about\": \"Eva is an Eagle.\"\n      },\n      {\n        \"name\": \"Ellie Elephant\",\n        \"profilePic\": \"assets/img/speakers/elephant.jpg\",\n        \"about\": \"Ellie is an Elephant.\"\n      },\n      {\n        \"name\": \"Molly Mouse\",\n        \"profilePic\": \"assets/img/speakers/mouse.jpg\",\n        \"about\": \"Molly is a Mouse.\"\n      },\n      {\n        \"name\": \"Paul Puppy\",\n        \"profilePic\": \"assets/img/speakers/puppy.jpg\",\n        \"about\": \"Paul is a Puppy.\"\n      }\n    ];\n\n    for (let item of items) {\n      this.items.push(new Item(item));\n    }\n  }\n\n  query(params?: any) {\n    if (!params) {\n      return this.items;\n    }\n\n    return this.items.filter((item) => {\n      for (let key in params) {\n        let field = item[key];\n        if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {\n          return item;\n        } else if (field == params[key]) {\n          return item;\n        }\n      }\n      return null;\n    });\n  }\n\n  add(item: Item) {\n    this.items.push(item);\n  }\n\n  delete(item: Item) {\n    this.items.splice(this.items.indexOf(item), 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mocks/providers/items.ts","// The page the user lands on after opening the app and without a session\nexport const FirstRunPage = 'WelcomePage';\n\n// The main page the user will see as they use the app over a long period of time.\n// Change this if not using tabs\nexport const MainPage = 'TabsPage';\n\nexport const LoginPage = 'LoginPage';\n\n// The initial root pages for our tabs (remove if not using tabs)\nexport const Tab1Root = 'AccountListMasterPage';\nexport const Tab2Root = 'SearchPage';\nexport const Tab3Root = 'SettingsPage';\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pages.ts","/**\n * A generic model that our Master-Detail pages list, create, and delete.\n *\n * Change \"Item\" to the noun your app will use. For example, a \"Contact,\" or a\n * \"Customer,\" or a \"Animal,\" or something like that.\n *\n * The Items service manages creating instances of Item, so go ahead and rename\n * that something that fits your app as well.\n */\nimport { Transaction } from './transaction';\n\nexport class Account {\nprofilePic :string = '';\ntransactions : Transaction[] = [];\nconstructor(res:any) {\n    // Quick and dirty extend/assign fields to this model\n    for (const f in res) {\n      this[f] = res[f];\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/account.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Camera } from '@ionic-native/camera';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { IonicStorageModule, Storage } from '@ionic/storage';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { Items } from '../mocks/providers/items';\nimport { Settings } from '../providers/providers';\nimport { User } from '../providers/providers';\nimport { Api } from '../providers/providers';\nimport { MyApp } from './app.component';\nimport { AuthInterceptor} from '../providers/providers';\nimport { NotAuthInterceptor} from '../providers/providers';\nimport { Accounts } from '../providers/providers';\n\n\n// The translate loader needs to know where to load i18n files\n// in Ionic's static asset pipeline.\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function provideSettings(storage: Storage) {\n  /**\n   * The Settings provider takes a set of default settings for your app.\n   *\n   * You can add new settings options at any time. Once the settings are saved,\n   * these values will not overwrite the saved values (this can be done manually if desired).\n   */\n  return new Settings(storage, {\n    apiURL: 'https://intelligentfinancials.mybluemix.net',\n    authtoken: ''\n  });\n}\n\n@NgModule({\n  declarations: [\n    MyApp\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp\n  ],\n  providers: [\n    Api,\n    Items,\n    User,\n    Camera,\n    SplashScreen,\n    StatusBar,\n    { provide: Settings, useFactory: provideSettings, deps: [Storage] },\n    // Keep this to enable Ionic's runtime error handling during development\n    {provide: ErrorHandler, useClass: IonicErrorHandler },\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: NotAuthInterceptor, multi: true},\n    Accounts\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Api } from './api/api';\nimport { Items } from '../mocks/providers/items';\nimport { Settings } from './settings/settings';\nimport { User } from './user/user';\nimport { AuthInterceptor } from './interceptor/authinterceptor';\nimport { NotAuthInterceptor } from './interceptor/notauthinterceptor';\nimport { Accounts } from './accounts/accounts';\n\nexport {\n    Api,\n    Items,\n    Settings,\n    User,\n    AuthInterceptor,\n    NotAuthInterceptor,\n    Accounts\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/providers.ts","/**\n * A generic model that our Master-Detail pages list, create, and delete.\n *\n * Change \"Item\" to the noun your app will use. For example, a \"Contact,\" or a\n * \"Customer,\" or a \"Animal,\" or something like that.\n *\n * The Items service manages creating instances of Item, so go ahead and rename\n * that something that fits your app as well.\n */\nexport class Item {\n\n  constructor(fields: any) {\n    // Quick and dirty extend/assign fields to this model\n    for (const f in fields) {\n      this[f] = fields[f];\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/item.ts","import 'rxjs/add/operator/toPromise';\n\nimport { Injectable } from '@angular/core';\n\nimport { Api } from '../api/api';\n\n/**\n * Most apps have the concept of a User. This is a simple provider\n * with stubs for login/signup/etc.\n *\n * This User provider makes calls to our API at the `login` and `signup` endpoints.\n *\n * By default, it expects `login` and `signup` to return a JSON object of the shape:\n *\n * ```json\n * {\n *   status: 'success',\n *   user: {\n *     // User fields your app needs, like \"id\", \"name\", \"email\", etc.\n *   }\n * }Ø\n * ```\n *\n * If the `status` field is not `success`, then an error is detected and returned.\n */\n@Injectable()\nexport class User {\n  _user: any;\n\nconstructor(public api: Api) {\n    //Make these methods safe\n}\n\n  /**\n   * Send a POST request to our login endpoint with the data\n   * the user entered on the form.\n   */\n  login(accountInfo: any) {\n    //Create a promise to handle this as it is an asynchronous ttask\n    let prom = new Promise((resolve, reject) => {\n        let seq = this.api.post('users/login', accountInfo).share();\n\n        seq.subscribe((res: any) => {\n          console.log(res.status);\n          // If the API returned a successful response, mark the user as logged in\n          if (res.status == 'Login successful!') {\n            this._loggedIn(res);\n            resolve(res);\n          } else {\n            reject(res);\n          }\n        }, err => {\n            reject(err);\n        });\n    });\n\n    return prom;\n  }\n\n  /**\n   * Send a POST request to our signup endpoint with the data\n   * the user entered on the form.\n   */\n  signup(accountInfo: any) {\n    this.logout(); //logout anyone who is still there\n    //Create a promise to handle this as it is an asynchronous ttask\n    let prom = new Promise((resolve, reject) => {\n        let seq = this.api.post('users/register', accountInfo).share();\n\n        seq.subscribe((res: any) => {\n          console.log(res.status);\n          // If the API returned a successful response, mark the user as logged in\n          if (res.status == 'Registration Successful!') {\n              resolve(res);\n            } else {\n              reject(res);\n            }\n        }, err => {\n          reject(err);\n        });\n    });\n\n    return prom;\n  }\n\n  /**\n   * Log the user out, which forgets the session\n   */\n  logout() {\n    this.api.resetauthtoken('');\n    this._user = null;\n  }\n\n  /**\n   * Process a login/signup response to store user data\n   */\n  private _loggedIn(resp) {\n    this.api.resetauthtoken(resp.token);\n    this._user = resp.user;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.ts","import {Injectable} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromPromise';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\nimport {Settings} from '../settings/settings';\nimport {Events } from 'ionic-angular';\n \n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private settings: Settings, public events: Events) {\n  }\n \n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return Observable.fromPromise (this.settings.getValue('authtoken')).mergeMap (authtoken => {\n        \n            if( authtoken == undefined || authtoken == null) {\n                console.log('notoken found');\n                this.events.publish('user:notoken');\n                return next.handle(req);\n            }\n        \n            console.log(\"Adding token to request:\" + authtoken);\n            // Clone the request to add the new header.\n        \n            const authReq = req.clone({headers: req.headers.set('x-access-token', authtoken)});\n            // Pass on the cloned request instead of the original request.\n            return next.handle(authReq);\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/interceptor/authinterceptor.ts","import {Injectable} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpErrorResponse} from '@angular/common/http';\nimport {Events } from 'ionic-angular';\n \n@Injectable()\nexport class NotAuthInterceptor implements HttpInterceptor {\nconstructor(public events: Events) {\n  }\n \n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).do((event: HttpEvent<any>) => {\n      if (event instanceof HttpResponse) {\n        // do stuff with response if you want\n        console.log('Authorised response');\n      }\n    }, (err: any) => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 401) {\n          // redirect to the login route\n          // or show a modal\n          console.log('Unauthorised response');\n          this.events.publish('user:unauthorised');\n        }\n      }\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/interceptor/notauthinterceptor.ts","import { Injectable } from '@angular/core';\n\nimport { Account } from '../../models/account';\nimport { Transaction } from '../../models/transaction';\nimport { Api } from '../api/api';\n\n@Injectable()\nexport class Accounts {\n  accounts: Map<string, Account> = new Map<string, Account>();\n  accountBalances: Map<string, string> = new Map<string, string>();\n    \n  defaultAccount: any = {\n    \"vendor\": \"Default Bank\",\n    \"profilePic\": \"assets/img/speakers/bear.jpg\",\n    \"type\": \"savings\",\n      \"identifier\": \"000\"\n  };\n        \n  constructor(public api: Api) { }\n\n  /**\n  *\n  **/\n  /**\n  * Accounts balance query for this user\n  **/\n  queryBalances(params?: any) {\n    //Create a promise to handle this as it is an asynchronous ttask\n    let prom = new Promise((resolve, reject) => {\n        //Make an API call to receive the balance information, this is an asynchronours call\n        let seq = this.api.get('transactions/balance', params);\n        \n        //Subscribe to the response\n        seq.subscribe((res: any) => {\n          //console.log(JSON.stringify(res));\n          // If the API returned a successful response, start parsing and adding the balances to the account\n          if (res!=null && res.length > 0) {\n            console.log(\"Server returned \" + res.length + \" balances\");\n            //For each retrieved balance add it to the corresponding account\n            for(let item of res) {\n                //console.log(item._id+\":\"+item.value);\n                this.accountBalances.set(item._id, item.value);\n            }\n            //resolve the promise so the caller can process transactions for this account\n            resolve(this.accountBalances);\n          } else {\n            //resolve with an empty array\n            resolve(this.accountBalances);\n          }\n          \n        }, err => {\n          //Reject with an error\n          reject(err);\n        });       \n    });\n\n    return prom;\n }\n\n  /**\n  * Accounts list query to get all accounts for this user\n  **/\n  query(accountId: string = null, params?: any) {\n    //Endpoint for accounts API\n    let url = 'accounts';\n      \n    //If an accountId was specified add it to the endpoint\n    if (accountId != null) url = url + \"/\" + accountId;\n\n    //Create a promise to handle this as it is an asynchronous ttask\n    let prom = new Promise((resolve, reject) => {\n        \n        //Make the API call to get an Observable\n        let seq = this.api.get(url, params);\n\n        //Subscribe the the observable response\n        seq.subscribe((res: any) => {\n          //console.log(JSON.stringify(res));\n          // If the API returned a successful response, add all the returned accounts\n          if (res!=null && res.length > 0) {\n            //Assuming an array of JSON account representations, create and add each of them\n            for(let item of res) {\n                //Create a new object from the JSON response\n                let account = new Account(item);\n                //console.log(\"Account:\"+JSON.stringify(account));\n                account.profilePic = 'test.png';//TODO: Remove once added to backend\n                //Add this account to the accounts list\n                this.addOne(account);\n            }\n            //Resolve the promise with the retrieved accounts\n            resolve(this.accounts);\n          } else {\n            //Resolve the promise with an empty account map\n            resolve(this.accounts);\n          }\n        }, err => {\n          //Reject the promise with the corresponding error\n          reject(err);\n        });\n    });\n    return prom;\n }\n\n queryTransactionsToFromAccount(accountId: string, params?: any) {\n    //Create a promise to handle this as it is an asynchronous ttask\n    let prom = new Promise((resolve, reject) => {\n        //Make an API call to receive the transaction information, this is an asynchronours call\n        let seq = this.api.get('transactions/toOrFromAccount/'+accountId, params);\n        \n        //Subscribe to the response\n        seq.subscribe((res: any) => {\n          //console.log(JSON.stringify(res));\n          // If the API returned a successful response, start parsing and adding the transactions to the account\n          if (res!=null && res.length > 0) {\n            console.log(\"Server returned \" + res.length + \" transactions\");\n            //For each retrieved transaction add it to the corresponding account\n            for(let item of res) {\n                let transaction = new Transaction(item);\n                //console.log(\"Transaction:\"+JSON.stringify(transaction));\n                this.addTransaction(accountId, transaction);\n            }\n            //resolve the promise so the caller can process transactions for this account\n            resolve(this.accounts.get(accountId).transactions);\n          } else {\n            //resolve with an empty array\n            resolve([]);\n          }\n          \n        }, err => {\n          //Reject with an error\n          reject(err);\n        });       \n    });\n\n    return prom;\n  }\n\n  /**\n  * Add a single account to the account list\n  **/\n  addOne(account: Account) {\n    //console.log(\"IDENTIFIER: \" + account[\"identifier\"]);\n      this.accounts.set(account[\"identifier\"], account);\n  }\n\n  /**\n  * Saves a new account to the account list\n  **/\n  saveOne(account: Account) {\n    //Create a promise to handle this as it is an asynchronous ttask\n    let prom = new Promise((resolve, reject) => {\n        let seq = this.api.post('accounts', account).share();\n\n        seq.subscribe((res: any) => {\n          console.log(res.status);\n          // If the API returned a successful response, mark the user as logged in\n          if (res.status == 'Account creation successful!') {\n             let account = new Account(res.account);\n             console.log(\"SAVED ACCOUNT: \"+ JSON.stringify(account));\n              this.addOne(account);\n              resolve();\n          } else {\n            reject(res); //There was a response but the account could not be saved\n          }\n        }, err => {\n            reject(err);\n        }); \n    });\n      \n    return prom;\n  }\n\n  /**\n  * Saves a new transaction\n  **/\nsaveOneTransaction(accountId: string, transaction: Transaction) {\n    //Create a promise to handle this as it is an asynchronous ttask\n    let prom = new Promise((resolve, reject) => {\n        let seq = this.api.post('transactions', transaction).share();\n\n        seq.subscribe((res: any) => {\n          console.log(res.status);\n          // If the API returned a successful response, mark the user as logged in\n          if (res.status == 'Transaction creation successful!') {\n              let transaction = new Transaction(res.transaction); //Get the updated transaction object\n              console.log(\"SAVED TRANSACTION: \"+ JSON.stringify(transaction));\n              this.addTransaction(transaction['accountTo'], transaction);\n              this.addTransaction(transaction['accountFrom'], transaction);\n              resolve(this.accounts.get(accountId));\n          } else {\n            reject(res); //There was a response but the account could not be saved\n          }\n        }, err => {\n            reject(err);\n        });\n    });\n\n    return prom;\n  }\n\n  /**\n  * Add a single transaction to this account\n  **/\n  addTransaction(accountId: string, transaction: Transaction) {\n    //Try to see if the account has already been retrieved before\n    let account = this.accounts.get(accountId);\n    if(account!= null) {\n        console.log(\"Added transaction to account :\" + accountId);\n        account.transactions.push(transaction);\n    } else {\n        console.log(\"SHOULD NOT HAPPEN: Account \"+accountId+\" has not been retrieved before\");\n    }\n}\n\n  delete(account: Account) {\n    this.accounts.delete(account[\"identifier\"]);\n  }\n\n  getAll() : Map<string, Account> {\n        return this.accounts;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/accounts/accounts.ts","/**\n * A generic model that our Master-Detail pages list, create, and delete.\n *\n * Change \"Item\" to the noun your app will use. For example, a \"Contact,\" or a\n * \"Customer,\" or a \"Animal,\" or something like that.\n *\n * The Items service manages creating instances of Item, so go ahead and rename\n * that something that fits your app as well.\n */\nexport class Transaction {\nconstructor(res:any) {\n    // Quick and dirty extend/assign fields to this model\n    for (const f in res) {\n          //Repalce account objects with their identifiers\nif((f === 'accountTo' || f === 'accountFrom') && (res[f] instanceof Object)) {\n              //console.log(\"Found : \" +f);\n              this[f] = \"\"+(res[f].identifier);\n            }\n        else\n          this[f] = res[f];\n        }\n    //console.log(\"Transaction:\"+JSON.stringify(this));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/transaction.ts","import { Component, ViewChild } from '@angular/core';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Config, Nav, Platform, LoadingController, Events } from 'ionic-angular';\n\nimport { FirstRunPage } from '../pages/pages';\nimport { Settings } from '../providers/providers';\n\n@Component({\n  template: `<ion-menu [content]=\"content\">\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Pages are ridiculously long</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list>\n        <button menuClose ion-item *ngFor=\"let p of pages\" (click)=\"openPage(p)\">\n          {{p.title}}\n        </button>\n      </ion-list>\n    </ion-content>\n\n  </ion-menu>\n  <ion-nav id=\"nav\" #content [root]=\"rootPage\" swipeBackEnabled=\"false\"></ion-nav>`\n})\nexport class MyApp {\n  rootPage = FirstRunPage;\n  loading = null;\n    \n  @ViewChild(Nav) nav: Nav;\n\n  pages: any[] = [\n    /**\n    { title: 'Tutorial', component: 'TutorialPage' },\n    { title: 'Welcome', component: 'WelcomePage' },\n    { title: 'Tabs', component: 'TabsPage' },\n    { title: 'Cards', component: 'CardsPage' },\n    { title: 'Content', component: 'ContentPage' },\n    { title: 'Login', component: 'LoginPage' },\n    { title: 'Signup', component: 'SignupPage' },\n    { title: 'Master Detail', component: 'ListMasterPage' },\n    { title: 'Menu', component: 'MenuPage' },\n    { title: 'Settings', component: 'SettingsPage' },\n    { title: 'Search', component: 'SearchPage' }\n    **/\n    { title: 'Login', component: 'LoginPage' },\n    { title: 'Search', component: 'SearchPage' },\n    { title: 'My Account', component: 'AccountListMasterPage' },\n    { title: 'Signup', component: 'SignupPage' },\n    { title: 'Settings', component: 'SettingsPage' }\n  ]\n\n  constructor(private translate: TranslateService, platform: Platform, settings: Settings, private config: Config, private statusBar: StatusBar, private splashScreen: SplashScreen, private loadingCtrl: LoadingController, private events: Events) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n    this.initTranslate();\n\n    this.events.subscribe('loading:show', (message:string) => {\n        this.loading = this.loadingCtrl.create({\n          spinner: 'bubbles',\n          content: message\n        });\n        this.loading.present();\n        });\n    this.events.subscribe('loading:hide', () => {\n        this.loading.dismiss();\n        });\n      \n  }\n\n  initTranslate() {\n    // Set the default language for translation strings, and the current language.\n    this.translate.setDefaultLang('en');\n\n    /**if (this.translate.getBrowserLang() !== undefined) {\n      this.translate.use(this.translate.getBrowserLang());\n    } else {\n      this.translate.use('en'); // Set your language here\n    }**/\n    this.translate.use('en'); //Fix the language\n    this.translate.get(['BACK_BUTTON_TEXT']).subscribe(values => {\n      this.config.set('ios', 'backButtonText', values.BACK_BUTTON_TEXT);\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClient, HttpParams} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Settings } from '../settings/settings';\n/**\n * Api is a generic REST Api handler. Set your API url first.\n */\n@Injectable()\nexport class Api {\n  url: string = 'https://example.com/api/v1';\n  authtoken: string = '';\n\nconstructor(public http: HttpClient, public settings: Settings) {\n    //Load the settings first and then set the value\n    this.settings.load().then(() => {\n        let mySettings = this.settings.allSettings;\n        this.url = mySettings['apiURL'];\n        this.authtoken = mySettings['authtoken'];\n    });\n    //Make these method this safe\n    this.resetauthtoken.bind(this);\n    this.get.bind(this);\n    this.post.bind(this);\n    this.put.bind(this);\n    this.delete.bind(this);\n    this.patch.bind(this);\n  }\n\n  get(endpoint: string, params?: any, reqOpts?: any) {\n    reqOpts = this.getHttpReqOptions(params, reqOpts);\n    console.log('Getting at : ' + this.url + '/' + endpoint + '?' + JSON.stringify(reqOpts));\n    return this.http.get(this.url + '/' + endpoint, reqOpts);\n  }\n\n  post(endpoint: string, body: any, reqOpts?: any) {\n    reqOpts = this.getHttpReqOptions(null, reqOpts);\n    console.log('Posting at : ' + this.url + '/' + endpoint + '?' + JSON.stringify(reqOpts));\n    return this.http.post(this.url + '/' + endpoint, body, reqOpts);\n  }\n\n  put(endpoint: string, body: any, reqOpts?: any) {\n    reqOpts = this.getHttpReqOptions(null, reqOpts);\n    console.log('Putting at : ' + this.url + '/' + endpoint + '?' + JSON.stringify(reqOpts));\n    return this.http.put(this.url + '/' + endpoint, body, reqOpts);\n  }\n\n  delete(endpoint: string, reqOpts?: any) {\n    reqOpts = this.getHttpReqOptions(null, reqOpts);\n    console.log('Deleting at : ' + this.url + '/' + endpoint + '?' + JSON.stringify(reqOpts));\n    return this.http.delete(this.url + '/' + endpoint, reqOpts);\n  }\n\n  patch(endpoint: string, body: any, reqOpts?: any) {\n    reqOpts = this.getHttpReqOptions(null, reqOpts);\n    console.log('Patching at : ' + this.url + '/' + endpoint + '?' + JSON.stringify(reqOpts));\n    return this.http.put(this.url + '/' + endpoint, body, reqOpts);\n  }\n  \n  resetauthtoken(token:string) {\n    //Getting the value ensures we have a valid settings array even on first use\n    this.authtoken = token;\n    this.settings.setValue('authtoken', token);\n  }\n\n  private getHttpReqOptions(params?:any, reqOpts?:any) {\n    if (!reqOpts) {\n      reqOpts = {\n        params: new HttpParams()\n      };\n    }\n\n    // Support easy query params for GET requests\n    if (params) {\n      reqOpts.params = new HttpParams();\n      for (let k in params) {\n        reqOpts.params.set(k, params[k]);\n      }\n    }\n    //reqOpts['headers'] = (new HttpHeaders()).set('x-access-token', this.authtoken);\n    return reqOpts;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/api.ts","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n/**\n * A simple settings/config class for storing key/value pairs with persistence.\n */\n@Injectable()\nexport class Settings {\n  private SETTINGS_KEY: string = '_settings';\n\n  settings: any;\n\n  _defaults: any;\n  _readyPromise: Promise<any>;\n\n  constructor(public storage: Storage, defaults: any) {\n    this._defaults = defaults;\n    //make these methods this safe\n    this.setValue.bind(this);\n    this.load.bind(this);\n    this.merge.bind(this);\n    this.setAll.bind(this);\n    this.getValue.bind(this);\n    this.displaySettings.bind(this);\n  }\n\n  load() {\n    return this.storage.get(this.SETTINGS_KEY).then((value) => {\n      if (value) {\n        this.settings = value;\n        return this._mergeDefaults(this._defaults);\n      } else {\n        return this.setAll(this._defaults).then((val) => {\n          this.settings = val;\n        })\n      }\n    });\n  }\n\n  _mergeDefaults(defaults: any) {\n    for (let k in defaults) {\n      if (!(k in this.settings)) {\n        this.settings[k] = defaults[k];\n      }\n    }\n    return this.setAll(this.settings);\n  }\n\n  merge (settings: any) {\n    for (let k in settings) {\n      this.settings[k] = settings[k];\n    }\n    return this.save();\n  }\n\n  setValue(key: string, value: any) {\n    this.settings[key] = value;\n    return this.storage.set(this.SETTINGS_KEY, this.settings);\n  }\n\n  setAll (value: any) {\n    return this.storage.set(this.SETTINGS_KEY, value);\n  }\n\n  getValue(key: string) {\n    return this.storage.get(this.SETTINGS_KEY)\n      .then(settings => {\n        return settings[key];\n      });\n  }\n\n  private save() {\n    return this.setAll(this.settings);\n  }\n\n  get allSettings() {\n    return this.settings;\n  }\n    \n  displaySettings() {\n    console.log(\"Displaying settings...\");\n    for(let k in this.settings) {\n        console.log(\"\"+k+\" : \"+this.settings[k]);\n    }  \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/settings/settings.ts"],"sourceRoot":""}
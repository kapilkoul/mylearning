{"version":3,"sources":["../../src/pages/signup/signup.module.ts","../../src/pages/signup/signup.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEV;AActC;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAZ5B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAU;aACX;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,2DAAU,CAAC;gBACpC,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,2DAAU;aACX;SACF,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AClBa;AACa;AACgB;AAEtB;AACF;AAO/C;IAcE,oBAAmB,OAAsB,EAChC,IAAU,EACV,SAA0B,EAC1B,gBAAkC,EACpC,MAAc;QAJrB,iBASC;QATkB,YAAO,GAAP,OAAO,CAAe;QAChC,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QACpC,WAAM,GAAN,MAAM,CAAQ;QAjBrB,yCAAyC;QACzC,iEAAiE;QACjE,6BAA6B;QAC7B,YAAO,GAAgF;YACrF,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,UAAU;SACrB,CAAC;QAWA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACxD,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;IAED,6BAAQ,GAAR;QAAA,iBAuBC;QAtBC,+CAA+C;QAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aAC7B,IAAI,CAAC,UAAC,IAAI;YACT,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAClC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,4BAA4B,CAAC,CAAC;YAClE,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CAAC;aACD,IAAI,CAAC,UAAC,IAAI;YACT,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YACpC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wDAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,yDAAS,CAAC,CAAC;YAC7B,oBAAoB;YACpB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,KAAI,CAAC,iBAAiB,GAAE,KAAK,GAAE,GAAG,CAAC,OAAO;gBACnD,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAhDU,UAAU;QAJtB,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;WACG;SAC3B,CAAC;+EAeyC;YAC1B,sEAAI;YACC,6EAAe;YACR,+DAAgB;YAC5B,MAAM;OAlBV,UAAU,CAiDtB;IAAD,CAAC;AAAA;SAjDY,UAAU,e","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { SignupPage } from './signup';\n\n@NgModule({\n  declarations: [\n    SignupPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SignupPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    SignupPage\n  ]\n})\nexport class SignupPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController, Events } from 'ionic-angular';\n\nimport { User } from '../../providers/providers';\nimport { LoginPage, MainPage } from '../pages';\n\n@IonicPage()\n@Component({\n  selector: 'page-signup',\n  templateUrl: 'signup.html'\n})\nexport class SignupPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { firstname: string, lastname: string, username: string, password: string } = {\n    firstname: 'Test',\n    lastname: 'User',\n    username: 'testuser',\n    password: 'password'\n  };\n\n  // Our translated text strings\n  private signupErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService,\n  public events: Events) {\n\n    this.translateService.get('SIGNUP_ERROR').subscribe((value) => {\n      this.signupErrorString = value;\n    })\n  }\n\n  doSignup() {\n    // Attempt to login in through our User service\n    this.events.publish(\"loading:show\", 'Signing you up...');\n    this.user.signup(this.account)\n    .then((resp) => {\n      this.events.publish(\"loading:hide\");\n        this.events.publish(\"loading:show\", 'Signup done. Logging in...');\n        return this.user.login(this.account);\n    })\n    .then((resp) => {\n      this.events.publish(\"loading:hide\");\n      this.navCtrl.push(MainPage);         \n    })\n    .catch((err) => {\n      this.navCtrl.push(LoginPage);\n      // Unable to sign up\n      let toast = this.toastCtrl.create({\n        message: this.signupErrorString +\" | \" +err.message,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts"],"sourceRoot":""}